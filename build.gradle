plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'com.bmuschko.docker-remote-api' version '9.1.0'
}

group = 'com.bn.docker_demo'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

jar {
    archiveBaseName = 'spring-boot-docker'
    archiveVersion = '1.0.0'
}

tasks.named('bootJar') {
    archiveFileName = 'spring-boot-docker.jar'
}

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

task buildDockerImage(type: com.bmuschko.gradle.docker.tasks.image.DockerBuildImage) {
    inputDir = file('.')
    //tags = ["javatechie/${project.name}:${project.version}"]
    buildArgs = ["JAR_FILE": "build/libs/${jar.archiveBaseName.get()}-${jar.archiveVersion.get()}.jar"]
}

task pushDockerImage(type: com.bmuschko.gradle.docker.tasks.image.DockerPushImage) {
    dependsOn buildDockerImage
    images = ["javatechie/${project.name}:${project.version}"]
}

build {
    dependsOn buildDockerImage
}

tasks.register('publishDocker') {
    dependsOn pushDockerImage
}


tasks.named('test') {
    useJUnitPlatform()
}

